Принципы ООП : Инкапсуляция, Наследование, Абстракция и Полиморфизм
1. Инкапсуляция это объединение объектов с их свойствами и методами. С параметрами класса работают не напрямую а через специальные функции.
2. Абстракция это придание объекту характеристик, которые отличают его от всех объектов, четко определяя его концептуальные границы.
3. Наследование это когда один класс наследует функции другого (Родительского) класса. После чего дочерний класс может пользоваться своими функциями так и функциями и параметрами Родительского класса. Для этого принципа были реализованы права доступов Private, Protected и Public.
4. Полиморфизм это возможность обработки разных типов данных, когда 1 класс дает базу для других классов с помощью одной и той же функции или метода.


ООП это методология проектирования, основаная на представлении программы в виде совокупности объектов.

Инкапсуляцией называется включение различных мелких элементов в более крупный объект, в результате чего программист работает непосредственно с этим объектом. Это приводит к упрощению программы, поскольку из нее исключаются второстепенные детали.

Абстракция пример: телефон имеет базовые функции например звонить, контакты, смс. Благодоря абстракции можем структурировать функции и не повторять код.

Наследование, например есть животные у них много общего например 4 лапы и хвост, значит родительский класс имеет эти функции, а дочерний это то что собаки гавкают и когда радуются махают хвостом, а коты умеют мяукать.

Полиморфизм позволяет использовать одни и те же имена для похожих, но технически разных задач. Главным в полиморфизме является то, что он позволяет манипулировать объектами путем создания стандартных интерфейсов для схожих действий. Полиморфизм значительно облегчает написание сложных программ.